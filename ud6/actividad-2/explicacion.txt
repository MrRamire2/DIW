Necesitas desarrollar la funcionalidad de la página de inicio de sesión utilizando `localStorage` para gestionar los datos de usuario y manejar la autenticación con jQuery.

### Requisitos:

1. **Creación de usuario al cargar la página**:
   - Cuando la página se cargue, verifica si hay algún usuario almacenado en el `localStorage` del navegador.
   - Si no existe un usuario, crea un usuario por defecto con las siguientes propiedades (en minúsculas):
     - `id`: un identificador autoincremental (empieza en 1 para el primer usuario).
     - `name`: admin.
     - `email`: desenvolupador@iesjoanramis.org.
     - `password_hash`: una contraseña cifrada (puedes usar "Ramis.20" como la contraseña por defecto y cifrarla).
     - `edit_users`, `edit_news`, `edit_bone_files`: valores booleanos o 1/0 para asignar permisos a las distintas partes de la sección de administración del sitio web.
     - `active`: valor booleano o 1/0 para especificar si el usuario está activo o no.
     - `is_first_login`: para cambiar la contraseña la primera vez que un usuario inicie sesión.
   - Este usuario no podrá ser eliminado de la base de datos bajo ninguna circunstancia.

   **Es importante que verifiques si el usuario existe en todas tus páginas.**

2. **Cifrado de la contraseña**:
   - Utiliza una biblioteca como `CryptoJS` para cifrar de forma segura la contraseña cuando se almacene en `localStorage`.
   - Asegúrate de que el proceso de inicio de sesión compare la versión cifrada de la contraseña ingresada con la almacenada.
   - Crearemos un archivo `keys.json` donde guardaremos la contraseña ya cifrada con `CryptoJS` y una sal. La sal debe almacenarse junto con el hash. Es necesario validar el hash más adelante. Asegúrate de utilizar una sal única para cada usuario o pieza de datos en el sistema. Reutilizar las sales puede comprometer la seguridad.

   ```javascript
   const password = "mySecurePassword";
   const salt = generateSalt();
   const saltedPassword = password + salt;
   const hash = CryptoJS.SHA256(saltedPassword).toString();

   {
     "hash": "",
     "salt": ""
   }
   ```

3. **Funcionalidad de inicio de sesión, validación y retroalimentación**:
   - Permite que el usuario inicie sesión verificando las credenciales ingresadas contra los datos almacenados en `localStorage`.
   - Debes validar el correo electrónico y la contraseña utilizando jQuery. No te bases en la validación básica de HTML.
   - Muestra mensajes apropiados al usuario como:
     - "Usuario o contraseña inválidos" si las credenciales son incorrectas.
     - "Inicio de sesión exitoso" si las credenciales coinciden, y al mismo tiempo cambia la página de inicio de sesión (login) a la página de administración (edit_users, edit_news o edit_bone_files, dependiendo de los permisos del usuario).
     - La primera vez que un usuario inicie sesión, debe cambiar su contraseña. Especifica las instrucciones para ingresar una contraseña segura: mínimo 12 caracteres, debe contener letras mayúsculas y minúsculas, números y caracteres especiales.

4. **Detalles de implementación**:
   - Utiliza jQuery para toda la manipulación del DOM y manejo de eventos. Para esta actividad, crearás la página `edit_users`. Toda la página HTML será creada utilizando jQuery (excepto el encabezado, pie de página y partes de accesibilidad de tu sitio web).
   - Almacena todos los datos del usuario de forma persistente en `localStorage` en formato JSON.